{"version":3,"sources":["pages/authentication/authentication.jsx","pages/createPlaylist/createPlaylist.jsx","pages/Search/Search.jsx","pages/Home/Home.jsx","pages/newPlaylist/newPlaylist.jsx","pages/playlists/playlists.jsx","App.js","serviceWorker.js","index.js","images/logo_spotify.png"],"names":["authentication","access_token","this","props","location","hash","split","pop","localStorage","length","config","headers","Authorization","axios","get","then","res","identifiant","data","id","setTimeout","history","push","className","href","src","logo","alt","Component","activateform","setState","formisactiv","state","handleChange","e","target","name","value","description","searchPlaylist","preventDefault","userId","post","console","log","Button","variant","color","onClick","onSubmit","TextField","label","onChange","type","Search","input","addTracks","searchactivated","params","q","tracks","items","album","albums","artist","artists","search","map","track","index","List","ListItem","textAlign","key","ListItemText","primary","ListItemAvatar","Avatar","images","url","Home","playlists","playlist","Card","style","margin","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","CardActions","size","window","newPlaylist","handleSubmit","offset","limit","next","catch","error","response","status","isNotFound","request","message","addTrack","uris","uri","playListId","refresh","changeTracksOffsetPrev","changeTracksOffsetNext","searchActivated","currentPage","disabled","aria-label","maxHeight","overflowY","display","right","Playlists","queryString","parse","musics","deleteTrack","music","track_id","fetch","method","body","json","filter","App","path","Playlist","Authenticate","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.47b86ff2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './authentication.css';\r\nimport logo from \"../../images/logo_spotify.png\";\r\n\r\nexport default class authentication extends Component {\r\n  componentDidMount() {\r\n    let hash = this.props.location.hash;\r\n    let access_token = hash.split(\"access_token=\").pop().split(\"&\")[0];\r\n    localStorage.access_token = access_token;\r\n    if (access_token.length > 0) {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`,\r\n        },\r\n      };\r\n      axios.get(\"https://api.spotify.com/v1/me\", config).then((res) => {\r\n        let identifiant = res.data.id;\r\n        localStorage.id = identifiant;\r\n      });\r\n      setTimeout(() => this.props.history.push(\"/home\"), 1000);\r\n    } else {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"auth_page\" >\r\n\r\n        \r\n          <div className=\"auth_text\">\r\n          <h1>Authentification</h1>\r\n        <div>\r\n          <a href=\"https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public playlist-modify-private&client_id=de2017d063ae4b7d87f7d52b9d8c7d31&redirect_uri=http://localhost:3000/auth\">\r\n            Se connecter\r\n          </a>\r\n            </div>\r\n        </div>\r\n        <div className=\"auth_image_container\">\r\n          <div className=\"auth_image\">\r\n            <div className=\"auth_image_content\">\r\n              <img src={logo} alt=\"Logo spotify\" className=\"logo_spotify\" />\r\n              <div className=\"text_spotify\">Spotify</div>\r\n            </div>\r\n</div>\r\n          </div>\r\n        </div>\r\n\r\n    \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./createPlaylist.css\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formisactiv: false,\r\n      name: \"\",\r\n      description: \"\",\r\n    };\r\n  }\r\n\r\n  activateform = () => {\r\n    this.setState({\r\n      formisactiv: !this.state.formisactiv,\r\n    });\r\n  };\r\n  handleChange = (e) => {\r\n \r\n    this.setState({\r\n\r\n      [e.target.name]: e.target.value,\r\n      [e.target.description]: e.target.value,\r\n    });\r\n  };\r\n\r\n  searchPlaylist = (e) => {\r\n\r\n    e.preventDefault();\r\n    let userId = localStorage.id;\r\n    let access_token = localStorage.access_token;\r\n    if (access_token && userId) {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`,\r\n        },\r\n      };\r\n      axios\r\n        .post(\r\n          \"https://api.spotify.com/v1/users/\" + userId + \"/playlists\",\r\n\r\n          {\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n          },\r\n          config\r\n        )\r\n        .then((res) => console.log(res));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.name);\r\n    console.log(this.state.description);\r\n    return (\r\n      <div className=\"createListContainer\">\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.activateform} className=\"createList\">\r\n Créer une playlist\r\n</Button>\r\n       \r\n        {this.state.formisactiv && (\r\n <form className=\"createForm\"  onSubmit={this.searchPlaylist}>\r\n          <TextField  label=\"Nom\"  name=\"name\" variant=\"outlined\" value={this.state.name} onChange={this.handleChange} className=\"textfield\"/>\r\n      <TextField label=\"Description\" name=\"description\" variant=\"outlined\"  value={this.state.description}  onChange={this.handleChange} className=\"textfield\"/>\r\n            <Button type=\"submit\" variant=\"outlined\" color=\"primary\"  className=\"createButton\">\r\nValider\r\n</Button>\r\n    </form>\r\n\r\n          \r\n          \r\n \r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport \"./Search.css\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchactivated: false,\r\n      input: \"\",\r\n      tracks: [],\r\n      album: [],\r\n      artist: [],\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value,\r\n    });\r\n  };\r\n  addTracks = () => {\r\n    this.setState({ searchactivated: true });\r\n    let access_token = localStorage.access_token;\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n      },\r\n      params: {\r\n        q: this.state.input,\r\n        type: \"artist,album,track\",\r\n      },\r\n    };\r\n    axios.get(\"https://api.spotify.com/v1/search\", config).then((res) => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        tracks: res.data.tracks.items,\r\n        album: res.data.albums.items,\r\n        artist: res.data.artists.items,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.searchactivated && this.state.input !== \"\" && this.state.tracks.length > 2 ? (\r\n          <div className=\"globalSearchContainer\">\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        <div className=\"searchContainer\">\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.addTracks}>\r\n          Rechercher\r\n        </Button>\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Album, Titre ou Artiste \"\r\n          value={this.state.search}\r\n          onChange={this.handleChange}\r\n          className=\"searchTextField\"\r\n        />\r\n        </div>\r\n        \r\n          <div className=\"searchedColumns\">\r\n          <div\r\n          className=\"searchCategories\"\r\n     \r\n          >\r\n            <h2>Titres</h2>\r\n            {this.state.tracks.map((track, index) => {\r\n              return (\r\n                <List>\r\n                  <ul>\r\n                    <ListItem textAlign=\"center\" key={index}>\r\n                      <ListItemText primary={track.name}></ListItemText>\r\n                    </ListItem>\r\n                  </ul>\r\n                </List>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n\r\nclassName=\"searchCategories\"\r\n\r\n        \r\n          >\r\n            <h2>Artistes</h2>\r\n            {this.state.artist.map((artist, index) => {\r\n              return (\r\n                <List>\r\n                  <ul>\r\n                    <ListItem textAlign=\"center\" key={index}>\r\n                      <ListItemText primary={artist.name}></ListItemText>\r\n                    </ListItem>\r\n                  </ul>\r\n                </List>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\nclassName=\"searchCategories\"\r\n\r\n         \r\n          >\r\n            <h2>Album</h2>\r\n            {this.state.album.map((album, index) => {\r\n              return (\r\n                <List>\r\n                  <ul>\r\n                    <ListItem textAlign=\"center\" key={index} >\r\n                      <ListItemAvatar>\r\n                        <Avatar src={album.images[2].url} />\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary={album.name}></ListItemText>\r\n                    </ListItem>\r\n                  </ul>\r\n                </List>\r\n              );\r\n            })}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        ) :    (<div className=\"searchContainer\">\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.addTracks} className=\"homePageSearchButton\">\r\n          Rechercher\r\n        </Button>\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Album, Titre ou Artiste \"\r\n          value={this.state.search}\r\n          onChange={this.handleChange}\r\n             className=\"searchTextField\"\r\n        />\r\n        </div>)\r\n        \r\n\r\n}\r\n    </>\r\n   \r\n    );\r\n  }\r\n      \r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CreatingPLaylist from \"../createPlaylist/createPlaylist\";\r\nimport Search from \"../Search/Search\";\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlists: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let access_token = localStorage.access_token;\r\n    let userId = localStorage.id;\r\n\r\n    if (access_token && userId) {\r\n      let config = {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      };\r\n      axios\r\n        .get(\r\n          \"https://api.spotify.com/v1/users/\" + userId + \"/playlists\",\r\n          config\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data.items);\r\n          this.setState({\r\n            playlists: res.data.items,\r\n          });\r\n        });\r\n    } else {//on retourne vers la page d'accueil\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home_page\">\r\n        <h1 className=\"home_title\">Bienvenue sur votre plateforme Spotify !</h1>\r\n      <div className=\"home_content\">\r\n          <div className=\"createPlaylistAndAlbums_list\">\r\n           <div className=\"create_list\"> <CreatingPLaylist/></div>\r\n\r\n            <div className=\"albums_list\">\r\n         \r\n          {this.state.playlists.map((playlist, index) => {\r\n            return (\r\n              <Card key={index} style={{ margin: \"5px\" }} className=\"card\">\r\n                <CardActionArea>\r\n                  {playlist.images[0] && (\r\n                    <CardMedia\r\n                      image={playlist.images[0].url}\r\n           className=\"cardImageSize\"\r\n                    />\r\n                  )}\r\n\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {playlist.name}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button\r\n                  className=\"buttonToTracks\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      (window.location =\r\n                        \"/playlists?id=\" +\r\n                        playlist.id +\r\n                        \"&artist=\" +\r\n                        playlist.name)\r\n                    }\r\n                  >\r\n                    Voir les titres\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n      </div>\r\n        \r\n\r\n<div className=\"searchPlaylist\">\r\n    \r\n\r\n          \r\n              <Search />\r\n      \r\n   \r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport \"./newPlaylist.css\";\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { isWidthDown } from \"@material-ui/core\";\r\nexport default class newPlaylist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchActivated: false,\r\n      tracks: [],\r\n      search: \"\",\r\n      playListId: null,\r\n      currentPage: 1,\r\n      offset: 0,\r\n      disabled: false,\r\n      next: \"\",\r\n      isNotFound:false,\r\n    };\r\n\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      search: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let access_token = localStorage.access_token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n      },\r\n      params: {\r\n        q: this.state.search,\r\n        type: \"track\",\r\n             offset: this.state.offset,\r\n        limit: 50,\r\n   \r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/search\", config)\r\n      .then((res) => {\r\n        console.log(res)\r\n        this.setState({\r\n          tracks: [...res.data.tracks.items],\r\n          next: res.data.tracks.next,\r\n          offset: this.state.offset \r\n        });\r\n\r\n      })\r\n      .catch((error) => {\r\n        // Error\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } if ( error.response && error.response.status >= 400){\r\n      this.setState({\r\n        isNotFound: true\r\n      })\r\n        }\r\n        \r\n        else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n  addTrack = (track) => {\r\n    let access_token = localStorage.access_token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n      },\r\n      params: {\r\n        uris: track.uri,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://api.spotify.com/v1/playlists/\" +\r\n        this.props.playListId +\r\n        \"/tracks\",\r\n        {},\r\n        config\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.props.refresh();\r\n      });\r\n  };\r\n\r\n\r\n  changeTracksOffsetPrev = (e) => {\r\n    if (this.state.offset === 0) {\r\n      return\r\n    } else {\r\n       this.setState({\r\n              offset: this.state.offset -= 50\r\n            })\r\n    }\r\n   \r\n    this.handleSubmit(e);\r\n\r\n}\r\n  changeTracksOffsetNext = (e) => {\r\n    console.log(\"NEXT : \" + this.state.next)\r\n    if (this.state.isNotFound) {\r\n      return\r\n\r\n\r\n    }\r\n    this.setState({\r\n              offset: this.state.offset += 50\r\n            })\r\n    this.handleSubmit(e);\r\n\r\n}\r\n\r\n \r\n  render() {\r\n    console.log(this.state.offset)\r\n\r\n\r\n    return (\r\n      <div className=\"newPlaylistPage\">\r\n        <form className=\"searchForMyPlaylist\" onSubmit={this.handleSubmit}>\r\n          <label className=\"spaceItemAndInput\">\r\n            <span className=\"spaceItemAndInput_Item\" >Musique :</span>\r\n            <input type=\"text\" onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Rechercher\" />\r\n        </form>\r\n\r\n\r\n       {this.state.tracks.length > 2 && (<div className=\"tracksList\">\r\n          {this.state.tracks.map((track, index) => {\r\n            return (\r\n              <div key={index} className=\"tracks\">\r\n                <List\r\n                  component=\"nav\"\r\n                  aria-label=\"main mailbox folders\"\r\n                  style={{ maxHeight: \"200px\", overflowY: \"auto\" }}\r\n                >\r\n                \r\n                  <ListItem>\r\n                    <div style={{display:\"block\"}}>\r\n                    <ListItemText primary={\"Titre :\" + \" \" + track.name} />\r\n                    <ListItemText primary={\"Artiste(s) :\" + \" \" + track.artists[0].name} />\r\n</div>\r\n                <ListItemAvatar>\r\n          <Avatar alt={track.album.name} src={track.album.images[2].url} />\r\n        </ListItemAvatar>    \r\n                \r\n               \r\n                 <div style={{right:\"5px\"}}><button onClick={() => this.addTrack(track)}>+</button></div>       \r\n                      </ListItem>\r\n                \r\n                </List>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n          \r\n          )}\r\n          <div className=\"buttons_container\">\r\n            <button onClick={this.changeTracksOffsetPrev} disabled={this.state.offset == 0 ? true : false} className=\"prev\" >Précédent</button>\r\n\r\n            <button onClick={this.changeTracksOffsetNext} disabled={this.state.isNotFound } className=\"next\" >Suivant</button>\r\n          \r\n            </div>\r\n        </div>\r\n       )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport \"./playlists.css\";\r\nimport NewPlaylist from \"../newPlaylist/newPlaylist\";\r\n\r\nexport default class Playlists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      musics: [],\r\n      artist: \"\",\r\n      playListId: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n  refresh = () => {\r\n    let access_token = localStorage.access_token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n      },\r\n    };\r\n    const params = queryString.parse(this.props.location.search);\r\n    this.setState({\r\n      playListId: params.id,\r\n      artist: params.artist,\r\n    }); // on récupère les paramètres se trouvant dans l'url\r\n    console.log(\"PARAMS\", params);\r\n    axios\r\n      .get(\r\n        \"https://api.spotify.com/v1/playlists/\" + params.id + \"/tracks\",\r\n        config\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          musics: res.data.items,\r\n        });\r\n        console.log(this.state.musics);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  deleteTrack = (index, music) => {\r\n    console.log(\"Index \" + index + \" Id \" + music.track.id + \"  Uri \" + music.track.uri)\r\n    const track_id = music.track.id;\r\n    const uri = music.track.uri;\r\nlet access_token = localStorage.access_token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n  'Content-type': 'application/json'\r\n      }\r\n    };\r\n\r\n    \r\n    \r\n\r\n    \r\n    console.log(config)\r\n\r\n\r\n \r\n    return fetch(`https://api.spotify.com/v1/playlists/${track_id}/tracks`,  {\r\n      method: \"delete\",\r\n      config,\r\n      body:{\r\n \"tracks\": [\r\n    {\r\n      \"uri\": uri,\r\n      \"positions\": \r\n       index\r\n      \r\n    },\r\n      ]\r\n    }\r\n      })\r\n      .then((res) => {\r\n        let response = res.json();\r\n        console.log(response)\r\n        this.setState({\r\n          musics: this.state.musics.filter(music => {\r\n            return music.track !== track_id\r\n          })\r\n        });\r\n\r\n      })\r\n      .catch((error) => {\r\n        // Error\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } if ( error.response && error.response.status >= 400){\r\n      this.setState({\r\n        isNotFound: true\r\n      })\r\n        }\r\n        \r\n        else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"playListPage\">\r\n        <NewPlaylist\r\n          playListId={this.state.playListId}\r\n          refresh={this.refresh}\r\n        />\r\n        <h1 className='playlistTitle'>Contenu de la playlist {this.state.artist}</h1>\r\n        <ul>\r\n          {this.state.musics.map((music, index) => {\r\n            return <div key={index}>{music.track.name}<button key={index} onClick={()=>(this.deleteTrack(index,music))}>X</button></div>;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Authenticate from \"./pages/authentication/authentication\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Playlist from \"./pages/playlists/playlists\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app_container\">\r\n      <Router>\r\n        <div className=\"app_page\">\r\n          <Switch>\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/playlists\" component={Playlist} />\r\n            <Route path=\"/\" component={Authenticate} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_spotify.7bcb5a3f.png\";"],"sourceRoot":""}